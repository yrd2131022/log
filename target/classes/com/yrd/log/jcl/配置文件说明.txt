JCL 有两个基本的抽象类：Log(基本记录器)和LogFactory(负责创建Log实例)。
添加依赖
<dependency>
	<groupId>commons-logging</groupId>
	<artifactId>commons-logging</artifactId>
	<version>1.2</version>
</dependency>


我们为什么要使用日志门面:
1. 面向接口开发，不再依赖具体的实现类。减少代码的耦合
2. 项目通过导入不同的日志实现类，可以灵活的切换日志框架
3. 统一API，方便开发者学习和使用
4. 统一配置便于项目日志的管理

JCL原理   (优先使用log4j,再使用jul)
1. 通过LogFactory动态加载Log实现类
2. 日志门面支持的日志实现数组
	private static final String[] classesToDiscover =
		new String[]{"org.apache.commons.logging.impl.Log4JLogger",
		"org.apache.commons.logging.impl.Jdk14Logger",
		"org.apache.commons.logging.impl.Jdk13LumberjackLogger",
		"org.apache.commons.logging.impl.SimpleLog"};
	
3. 获取具体的日志实现
	for(int i = 0; i < classesToDiscover.length && result == null; ++i) {
		result = this.createLogFromClass(classesToDiscover[i], logCategory,
		true);
	}
	
	
	