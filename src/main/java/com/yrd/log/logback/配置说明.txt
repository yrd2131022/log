logback会依次读取以下类型配置文件：
	logback.groovy
	logback-test.xml
	logback.xml 如果均不存在会采用默认配置



<!--slf4j core 使用slf4j必須添加-->
<dependency>
	<groupId>org.slf4j</groupId>
<	artifactId>slf4j-api</artifactId>
	<version>1.7.27</version>
</dependency>

		<!-- 绑定：logback 日志实现 -->
		<!-- https://mvnrepository.com/artifact/ch.qos.logback/logback-classic -->
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
			<version>1.2.3</version>
			<!-- <scope>test</scope> -->
		</dependency>
		<!-- https://mvnrepository.com/artifact/ch.qos.logback/logback-core -->
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-core</artifactId>
			<version>1.2.3</version>
		</dependency>





常见的日志门面 ：
JCL(被淘汰)、slf4j
常见的日志实现：
JUL、log4j、logback、log4j2

对于一般的Java项目而言，日志框架会选择slf4j-api作为门面，配上具体的实现框架（log4j、logback等），中间使用桥接器完成桥接。

log4j2,是门面技术，也是实现框架。

一般使用：slf4j+logback。或slf4j+log4j2